// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OfficeUser {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      String   @default("admin")
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id               String   @id @default(uuid())
  name             String
  email            String?
  phone            String?
  emergencyContact String?
  address          String?
  bloodGroup       String?
  joiningDate      String?
  department       String?
  supervisor       String?
  nidNumber        String?
  passportNumber   String?
  image            String? // Assuming storing image path; adjust as needed
  bio              String?
  projectStatus    String?  @default("Not Assigned")
  assetStatus      String?  @default("Not Assigned")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  projectsAssigned EmployeeProject[]
  assetAssigned    EmployeeAsset[]
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  startDate   String?
  deadline    String?
  client      String?
  image       String? // Assuming storing image path; adjust as needed
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  memberAssinged EmployeeProject[]
}

model Asset {
  id          String   @id @default(uuid())
  name        String
  description String?
  image       String?
  buyingDate  String?
  warranty    String?
  quantity    String?
  brand       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  memberAssigned EmployeeAsset?
}

model EmployeeProject {
  id         String   @id @default(uuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model EmployeeAsset {
  id String @id @default(uuid())

  assetId String @unique
  asset   Asset? @relation(fields: [assetId], references: [id])

  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
}
